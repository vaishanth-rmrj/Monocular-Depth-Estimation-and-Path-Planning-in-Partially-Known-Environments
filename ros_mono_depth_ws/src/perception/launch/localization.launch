<?xml version="1.0" encoding="UTF-8"?>

<launch>
  <!-- Arguments for launch file with defaults provided -->
  <arg name="database_path"     default="$(find wheelchair)/database/rtabmap.db"/>
  <arg name="rgb_topic"   default="/camera/rgb/image_raw"/>
  <arg name="depth_topic" default="/camera/depth/image_raw"/>
  <arg name="camera_info_topic" default="/camera/rgb/camera_info"/>  
  <arg name="show_viz" default="false"/>
  <arg name="rtabmap_args"                      default=""/>

  <arg name="rtabmap_default_args" default="$(arg rtabmap_args)
                                            --RGBD/NeighborLinkRefining true
                                            --RGBD/AngularUpdate 0.01
                                            --RGBD/LinearUpdate 0.01
                                            --RGBD/LocalRadius 5
                                            --RGBD/OptimizeFromGraphEnd false
                                            --Grid/FromDepth true
                                            --Grid/MaxObstacleHeight 0.7
                                            --Grid/RayTracing true
                                            --Reg/Force3DoF true
                                            --Reg/Strategy 0
                                            --Mem/STMSize 30"/>

  <!-- Mapping Node -->
  <group ns="rtabmap">

    <!-- rtabmap_ros/rgbd_sync nodlet -->
    <!-- it combines rgb and depth images into one -->
    <node pkg="nodelet" type="nodelet" name="rgbd_sync" output="screen"  args="standalone rtabmap_ros/rgbd_sync">
        <param name="approx_sync"                   value="false"/>
        <remap from="rgb/image"                     to="/camera/rgb/image_raw"/>
        <remap from="depth/image"                   to="/camera/depth/image_raw"/>
        <remap from="rgb/camera_info"               to="/camera/rgb/camera_info"/>
        <remap from="rgbd_image"                    to="rgbd_image"/>
    </node>

    <!-- uses previous nodlet's rgbd image -->
    <!-- converts rgbd to point cloud -->
    <node pkg="nodelet" type="nodelet" name="points_xyzrgb" output="screen" args="standalone rtabmap_ros/point_cloud_xyzrgb">
        <param name="decimation"                    value="4"/>
        <param name="voxel_size"                    value="0.05"/>
        <param name="approx_sync"                   value="false"/>
        <remap from="cloud"                         to="depth/color/voxels"/>
    </node>

    <!-- uses previous nodlet's point cloud-->
    <!-- nodlet to remove ground cloud points and publish obstacle cloud point -->
    <!-- obstacle cloud point is used by the planner -->
    <node pkg="nodelet" type="nodelet" name="obstacle_detection" output="screen" args="standalone rtabmap_ros/obstacles_detection">
        <param name="wait_for_transform"            value="true"/>
        <param name="frame_id"                      value="/base_footprint"/>
        <remap from="cloud"                         to="depth/color/voxels"/>
        <remap from="ground"                        to="depth/color/ground"/>
        <remap from="obstacles"                     to="depth/color/obstacles"/>
    </node>


    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" args="$(arg rtabmap_default_args)">

      <!-- Basic RTAB-Map Parameters -->
      <param name="database_path"       type="string" value="$(arg database_path)"/>
      <param name="frame_id"            type="string" value="base_footprint"/>
      <param name="odom_frame_id"       type="string" value="odom"/>
      <param name="subscribe_depth"     type="bool"   value="true"/>

      <!-- RTAB-Map Inputs -->
      <remap from="rgb/image" to="$(arg rgb_topic)"/>
      <remap from="depth/image" to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>

      <!-- RTAB-Map Output -->
      <remap from="grid_map" to="/map"/>

      <!-- Rate (Hz) at which new nodes are added to map -->
      <param name="Rtabmap/DetectionRate" type="string" value="1"/>

      <!-- 2D SLAM -->
      <param name="Reg/Force3DoF" type="string" value="true"/>

      <!-- Loop Closure Detection -->
      <!-- 0=SURF 1=SIFT 2=ORB 3=FAST/FREAK 4=FAST/BRIEF 5=GFTT/FREAK 6=GFTT/BRIEF 7=BRISK 8=GFTT/ORB 9=KAZE -->
      <param name="Kp/DetectorStrategy" type="string" value="0"/>

      <!-- Maximum visual words per image (bag-of-words) -->
      <param name="Kp/MaxFeatures" type="string" value="400"/>

      <!-- Used to extract more or less SURF features -->
      <param name="SURF/HessianThreshold" type="string" value="100"/>

      <!-- Loop Closure Constraint -->
      <!-- 0=Visual, 1=ICP (1 requires scan)-->
      <param name="Reg/Strategy" type="string" value="0"/>

      <!-- Minimum visual inliers to accept loop closure -->
      <param name="Vis/MinInliers" type="string" value="15"/>

      <!-- Put the robot into localization mode -->
      <!-- These two params diffenrtiates mapping and localization mode -->
      <param name="Mem/IncrementalMemory" type="string" value="false"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="true"/>
    </node>

    <!-- visualization with rtabmapviz -->
    <group if="$(arg show_viz)">
      <node pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(find rtabmap_ros)/launch/config/rgbd_gui.ini" output="screen">
          <param name="subscribe_depth"             type="bool" value="true"/>
          <param name="frame_id"                    type="string" value="base_footprint"/>

          <remap from="rgb/image"       to="$(arg rgb_topic)"/>
          <remap from="depth/image"     to="$(arg depth_topic)"/>
          <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      </node>
    </group>

    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find wheelchair)/rviz/config_1.rviz" />


  </group>
</launch>